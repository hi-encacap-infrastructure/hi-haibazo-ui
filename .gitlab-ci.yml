stages:
  - prepare
  - build
  - release
  - deploy

default:
  cache:
    key:
      files:
        - package.json
    paths:
      - node_modules/
  before_script:
    - corepack enable

prepare:
  stage: prepare
  script:
    - yarn install

build-storybook:
  stage: build
  rules:
    - if: $CI_MERGE_REQUEST_TITLE =~ /^Draft:/
      when: never
    - if: $CI_COMMIT_BRANCH == "develop" && $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_TAG
  script:
    - yarn run build-storybook
  artifacts:
    paths:
      - storybook-static
    name: storybook

build-package:
  stage: build
  rules:
    - if: $CI_MERGE_REQUEST_TITLE =~ /^Draft:/
      when: never
    - if: $CI_COMMIT_BRANCH == "develop" && $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_TAG
  script:
    - yarn run build
  artifacts:
    paths:
      - dist
    name: dist

release:
  stage: release
  cache: []
  rules:
    - if: $CI_COMMIT_BRANCH == "develop" && $CI_PIPELINE_SOURCE == "push"
    - if: $CI_COMMIT_BRANCH == "staging" && $CI_PIPELINE_SOURCE == "push"
    - if: $CI_COMMIT_BRANCH == "main" && $CI_PIPELINE_SOURCE == "push"
  script:
    - apk add --no-cache git
    - npx semantic-release

publish-storybook:
  stage: deploy
  needs: ['build-storybook']
  image:
    name: amazon/aws-cli:latest
    entrypoint:
      - '/usr/bin/env'
  rules:
    - if: $CI_COMMIT_TAG
  cache: []
  before_script:
    - ''
  environment:
    name: development
  variables:
    AWS_S3_BUCKET_NAME: '$AWS_S3_BUCKET_NAME'
  script:
    # If have a tag, deploy to a specific folder
    # - aws s3 sync storybook-static s3://$AWS_S3_BUCKET_NAME/storybook/$CI_ENVIRONMENT_NAME --delete
    - |
      if [[ "$CI_COMMIT_TAG" == *"develop"* ]]; then
        CI_ENVIRONMENT_NAME_BY_TAG="development"
      elif [[ "$CI_COMMIT_TAG" == *"staging"* ]]; then
        CI_ENVIRONMENT_NAME_BY_TAG="staging"
      else
        CI_ENVIRONMENT_NAME_BY_TAG="latest"
      fi
    - if [ -n "$CI_COMMIT_TAG" ]; then aws s3 sync storybook-static s3://$AWS_S3_BUCKET_NAME/storybook/$CI_COMMIT_TAG --delete; fi
    - if [ -n "$CI_ENVIRONMENT_NAME_BY_TAG" ]; then aws s3 sync storybook-static s3://$AWS_S3_BUCKET_NAME/storybook/$CI_ENVIRONMENT_NAME_BY_TAG --delete; fi

publish-npm:
  stage: deploy
  rules:
    - if: $CI_COMMIT_TAG
  cache: []
  script:
    - yarn publish --tag $CI_COMMIT_TAG --version $CI_COMMIT_TAG
