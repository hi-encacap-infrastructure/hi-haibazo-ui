stages:
  - build
  - release
  - deploy

default:
  image: imbios/bun-node:latest-20-slim
  cache:
    key:
      files:
        - package.json
    paths:
      - node_modules/
  before_script:
    - bun install

build-storybook:
  stage: build
  rules:
    - if: $CI_MERGE_REQUEST_TITLE =~ /^Draft:/
      when: never
    - when: always
  script:
    - bun run build-storybook
  artifacts:
    paths:
      - storybook-static
    name: storybook

# deploy-storybook-development:
#   stage: deploy
#   needs: ["build-storybook"]
#   cache: []
#   image:
#     name: amazon/aws-cli:latest
#     entrypoint:
#       - '/usr/bin/env'
#   rules:
#     - if: $CI_COMMIT_BRANCH == "develop" && $CI_PIPELINE_SOURCE == "push"
#   environment:
#     name: development
#   variables:
#     AWS_S3_BUCKET_NAME: "$AWS_S3_BUCKET_NAME_PREFIX"
#   script:
#     - aws s3 sync storybook-static s3://$AWS_S3_BUCKET_NAME_PREFIX/$CI_ENVIRONMENT_NAME/storybook/${CI_COMMIT_REF_SLUG} --delete

release-development:
  stage: release
  cache: []
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "develop"
    - when: never
  script:
    - apt-get update && apt-get install -y git
    - bunx semantic-release

deploy-storybook-development:
  stage: deploy
  needs: ["build-storybook"]
  cache: []
  image:
    name: amazon/aws-cli:latest
    entrypoint:
      - "/usr/bin/env"
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "develop"
    - if: $CI_COMMIT_TAG == /^v.*develop.*$/
  environment:
    name: development
  variables:
    AWS_S3_BUCKET_NAME: "$AWS_S3_BUCKET_NAME_PREFIX"
  script:
    # - aws s3 sync storybook-static s3://$AWS_S3_BUCKET_NAME_PREFIX.$CI_ENVIRONMENT_NAME/latest/${CI_COMMIT_TAG} --delete
    # - aws s3 sync storybook-static s3://$AWS_S3_BUCKET_NAME_PREFIX.$CI_ENVIRONMENT_NAME/storybook/${CI_COMMIT_TAG} --delete
    - echo "s3://$AWS_S3_BUCKET_NAME_PREFIX.$CI_ENVIRONMENT_NAME/latest/${CI_COMMIT_TAG}"
